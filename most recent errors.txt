=========================
Testing JNode Copy method
=========================

Failed 0 tests.
Passed 12 tests.
=========================
Testing JSON parser
=========================

Failed 0 tests.
Passed 53 tests.
=========================
Testing if JSON parser throws errors on bad inputs
=========================

Failed 0 tests.
Passed 4 tests.
=========================
Testing JSON parser advanced options (javascript comments, dates, datetimes, singlequoted strings)
=========================

Failed 0 tests.
Passed 14 tests.
=========================
Testing JSON parser's linter functionality
=========================

Expected JsonParser(true, true, true, true).Parse({)
to return
{} and have lint [Unexpected end of JSON]
Instead threw exception
Unexpected end of JSON at position 0 (char '{')
Expected JsonParser(true, true, true, true).Parse([)
to return
[] and have lint [Unexpected end of JSON]
Instead threw exception
Unexpected end of JSON at position 0 (char '[')
Failed 2 tests.
Passed 13 tests.
=========================
Testing JSON Lines parser
=========================

Failed 0 tests.
Passed 8 tests.
=========================
Testing YAML dumper
=========================

Test 7 (singlequotes and doublequotes inside key) failed:
Expected
a"b': "bub\"ar"

Got
a\"b': "bub\"ar"

Test 19 (Value contains quotes and colon) failed:
Expected
a: 'RT @blah: MondayMo"r''ing'

Got
a: "RT @blah: MondayMo\"r\'ing"

Test 20 (Value contains quotes and newline) failed:
Expected
a: "a\n'big'\ndog"

Got
a: "a\n\'big\'\ndog"

Test 22 (key contains quotes and colon) failed:
Expected
'"a: ''b''': a

Got
"\\\"a: ''b''": a

Failed 4 tests.
Passed 18 tests.
=========================
Testing Binops
=========================

Failed 0 tests.
Passed 6 tests.
=========================
Testing ArgFunctions
=========================

Failed 0 tests.
Passed 4 tests.
=========================
Testing slice extension
=========================

Failed 0 tests.
Passed 70 tests.
=========================
Testing RemesPath lexer
=========================

Failed 0 tests.
Passed 26 tests.
=========================
Testing RemesPath parser and compiler
=========================

The queried JSON in the RemesParser tests is:{"_": {"0": 0}, "7": [{"foo": 2}, 1], "bar": {"a": false, "b": ["a`g", "bah"]}, "baz": "z", "foo": [[0, 1, 2], [3.0, 4.0, 5.0], [6.0, 7.0, 8.0]], "guzo": [[[1]], [[2], [3]]], "jub": [], "quz": {}}
Failed 0 tests.
Passed 199 tests.
=========================
Testing that RemesPath throws errors on bad inputs
=========================

Failed 0 tests.
Passed 616 tests.
=========================
Testing RemesPath assignment operations
=========================

Failed 0 tests.
Passed 17 tests.
=========================
Testing JsonSchema generator
=========================

Failed 0 tests.
Passed 9 tests.
=========================
Testing JsonSchema validator
=========================

Failed 0 tests.
Passed 126 tests.
=========================
Testing JSON tabularizer
=========================

Failed 0 tests.
Passed 55 tests.
=========================
Testing JSON grepper's file reading ability
=========================

Failed 0 tests.
Passed 6 tests.
=========================
Testing JSON grepper's API request tool
=========================

Testing with 3 urls
Testing with 1 urls
Failed 0 tests.
Passed 4 tests.
=========================
Testing generation of random JSON from schema
=========================

Failed 0 tests.
Passed 15 tests.
=========================
Performance tests for JsonParser
=========================

Preview of json: [{"A": "Ky'c^g#~)0", "a": 1850111954, "b": 9318359041, "B": "Oyi:/ xxe2", "C": "sKCSa_^7Gg", "c": 7974777124, "d": 2670309238, "D": "0d_K)HmX!.", "E": ".uM*Z{0EJ_", "e": 6958410336, "f": 8050244728, "F": "1%SG_A!xB\t", "g": 3799657125, "G": "il1^k\\\nat*", "H": {"a": 6079042826, "b": 7292804611, "c"
...
To convert JSON string of size 91926 into JNode took 5.066 +/- 2.512 ms over 28 trials
Load times (ms): 2, 6, 2, 5, 2, 5, 2, 4, 2, 5, 4, 11, 5, 7, 2, 7, 3, 6, 4, 11, 7, 4, 6, 3, 5, 2, 4, 2
=========================
Performance tests for RemesPath (float arithmetic)
=========================

Compiling query "@[@[:].a * @[:].q < @[:].e]" into took 0.006 +/- 0.005 ms over 56 trials
To run pre-compiled query "@[@[:].a * @[:].q < @[:].e]" on JNode from JSON of size 91926 into took 0.067 +/- 0.119 ms over 56 trials
Query times (ms): 0.12, 0.068, 0.061, 0.051, 0.076, 0.075, 0.05, 0.041, 0.068, 0.055, 0.091, 0.04, 0.059, 0.051, 0.041, 0.054, 0.055, 0.054, 0.05, 0.05, 0.083, 0.063, 0.056, 0.07, 0.056, 0.055, 0.093, 0.042, 0.047, 0.04, 0.032, 0.051, 0.057, 0.044, 0.037, 0.041, 0.04, 0.039, 0.041, 0.038, 0.042, 0.04, 0.037, 0.042, 0.038, 0.044, 0.031, 0.058, 0.039, 0.038, 0.039, 0.044, 0.035, 0.042, 0.037, 0.939
Preview of result: [{"A": "Ky'c^g#~)0", "a": 1850111954, "b": 9318359041, "B": "Oyi:/ xxe2", "C": "sKCSa_^7Gg", "c": 7974777124, "d": 2670309238, "D": "0d_K)HmX!.", "E": ".uM*Z{0EJ_", "e": 6958410336, "f": 8050244728, "F": "1%SG_A!xB\t", "g": 3799657125, "G": "il1^k\\\nat*", "H": {"a": 6079042826, "b": 7292804611, "c"
...
=========================
Performance tests for RemesPath (string operations)
=========================

Compiling query "@[@[:].z =~ `(?i)[a-z]{5}`]" into took 0.015 +/- 0.075 ms over 56 trials
To run pre-compiled query "@[@[:].z =~ `(?i)[a-z]{5}`]" on JNode from JSON of size 91926 into took 0.08 +/- 0.023 ms over 56 trials
Query times (ms): 0.19, 0.105, 0.116, 0.114, 0.117, 0.07, 0.128, 0.102, 0.092, 0.091, 0.088, 0.093, 0.071, 0.068, 0.074, 0.095, 0.068, 0.073, 0.09, 0.068, 0.072, 0.074, 0.067, 0.067, 0.073, 0.074, 0.074, 0.082, 0.093, 0.075, 0.094, 0.094, 0.092, 0.078, 0.086, 0.081, 0.078, 0.084, 0.086, 0.08, 0.082, 0.082, 0.062, 0.065, 0.054, 0.052, 0.055, 0.052, 0.062, 0.061, 0.063, 0.056, 0.056, 0.056, 0.055, 0.054
Preview of result: [{"A": "\n]o1VQ5t6g", "a": 4710024278, "b": 3268860721, "B": "g4Y7+ew^.v", "C": "<E_7XL7YS`", "c": 4921465277, "d": 9420665097, "D": "Q&S>NK<OOn", "E": "M?6Ll1W\nFM", "e": 4146283970, "f": 8384193493, "F": "z[jPvslL\tc", "g": 1578133296, "G": "m'M4h,`|Wk", "H": {"a": 5184250383, "b": 5337791147, "c"
...
